# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build Eclipse Ignore Helper

on:
  push:
    branches: 
      - 'main'
  pull_request:

permissions:
  contents: read

jobs:
  build:
    name: build and check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      
    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit

    - name: Checkout branch
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 0
        
    - name: Set up JDK (8 and 17)
      uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
      with:
        java-version: |
          8
          17
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B verify -ntp --file pom.xml
      
    - name: Run PITest Maven
      run: mvn -B -Ppit-test verify -ntp --file pom.xml
      
    - name: Run Integration Tests
      run: mvn -B -Prun-its verify -ntp --file pom.xml
        
    - name: Analyze with SonarCloud.io
      env:
        JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -ntp -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.token=$SONAR_TOKEN
      
